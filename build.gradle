buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'com.google.protobuf'

  repositories {
    mavenLocal()
    jcenter()
  }

  dependencies {
    compile 'com.google.protobuf:protobuf-java:3.6.1'
    compile 'io.grpc:grpc-stub:1.16.1'
    compile 'io.grpc:grpc-protobuf:1.16.1'
    if (JavaVersion.current().isJava9Compatible()) {
      // Workaround for @javax.annotation.Generated
      // see: https://github.com/grpc/grpc-java/issues/3633
      compile 'javax.annotation:javax.annotation-api:1.3.1'
    }
  }

  protobuf {
    protoc {
      artifact = "com.google.protobuf:protoc:3.6.1"
    }
    plugins {
      grpcKotlin {
        artifact = "io.rouz:grpc-kotlin-gen:0.0.4:jdk8@jar"
      }
      grpcJava {
        artifact = "io.grpc:protoc-gen-grpc-java:1.16.1"
      }
    }
    generateProtoTasks {
      ofSourceSet('main')*.plugins {
        // Apply the "grpc" plugin whose spec is defined above, without
        // options.  Note the braces cannot be omitted, otherwise the
        // plugin will not be added. This is because of the implicit way
        // NamedDomainObjectContainer binds the methods.
        grpcJava {}
        grpcKotlin {}
      }
    }
  }
}

project(":importer") {
  dependencies { protobuf project(":base") }
}
